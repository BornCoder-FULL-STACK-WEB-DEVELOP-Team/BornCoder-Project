{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack\\\\bookingapp\\\\my-app\\\\src\\\\Components\\\\About.js\";\nimport React, { Fragment } from 'react';\nimport { about, about_update, updatebutton } from '../Styles/About.module.scss';\nimport IconButton from '@material-ui/core/IconButton';\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\nimport { blueGrey } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = theme => ({\n  button: {\n    backgroundColor: blueGrey[300]\n  }\n});\n\nclass About extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = event => {\n      console.log('Click');\n      this.setState({\n        textFieldValue: event.target.value\n      });\n    };\n\n    this.state = {\n      isToggleOn: false,\n      display: 'none'\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.saveClick = this.saveClick.bind(this);\n    this.cancelClick = this.saveClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn,\n      display: prevState.isToggleOn ? 'none' : 'block'\n    }));\n  }\n\n  cancelClick() {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn,\n      display: prevState.isToggleOn ? 'none' : 'block'\n    }));\n  }\n\n  saveClick() {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn,\n      display: prevState.isToggleOn ? 'none' : 'block'\n    }));\n    console.log('save');\n    console.log(this.state.textFieldValue);\n    this.setState({\n      count: this.state.count + 1\n    }, () => {\n      console.log(this.state);\n      let content_name = {\n        userName: this.state.textFieldValue\n      };\n      console.log(content_name); // The actual fetch request\n\n      fetch('http://localhost:8090/users/1', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(content_name)\n      }).then(response => {\n        if (response.ok) {\n          response.json().then(data => {\n            console.log(data);\n            fetch('http://localhost:8090/users/1').then(response => response.json()).then(data => {\n              //console.log(data)\n              this.setState({\n                users: data\n              }); ////赋值到本地数据\n\n              console.log(this.state.users.userName);\n              const {\n                setValue\n              } = this.props;\n              setValue(this.state.users);\n            }).catch(e => console.log('错误:', e));\n          });\n        } else {\n          console.log(\"请求不成功，状态码为\", response.status);\n        }\n      }).catch(function (e) {\n        console.log(\"Oops, error\");\n      });\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: about,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, \"ABOUT\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"Edit your description now.\"), /*#__PURE__*/React.createElement(IconButton, {\n      className: classes.button + \" \" + updatebutton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CreateOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: about_update,\n      style: {\n        display: this.state.display\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.upload_button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      label: \"Name\",\n      onChange: this.handleOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.saveClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \"Save\"))));\n  }\n\n}\n\nexport default withStyles(useStyles)(About);","map":{"version":3,"sources":["D:/fullstack/bookingapp/my-app/src/Components/About.js"],"names":["React","Fragment","about","about_update","updatebutton","IconButton","CreateOutlinedIcon","blueGrey","withStyles","Button","TextField","useStyles","theme","button","backgroundColor","About","Component","constructor","props","handleOnChange","event","console","log","setState","textFieldValue","target","value","state","isToggleOn","display","handleClick","bind","saveClick","cancelClick","prevState","count","content_name","userName","fetch","method","headers","body","JSON","stringify","then","response","ok","json","data","users","setValue","catch","e","status","render","classes","upload_button"],"mappings":"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","sourcesContent":["import React,{ Fragment } from 'react';\r\nimport {about,about_update,updatebutton} from '../Styles/About.module.scss';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\r\nimport {blueGrey} from '@material-ui/core/colors';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = theme => ({\r\n    button:{\r\n      backgroundColor:blueGrey[300],\r\n    },\r\n  });\r\n\r\n  class About extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isToggleOn: false,\r\n          display: 'none',\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.saveClick= this.saveClick.bind(this);\r\n        this.cancelClick= this.saveClick.bind(this);\r\n      }\r\n\r\n    handleOnChange = event => {\r\n        console.log('Click');\r\n        this.setState({textFieldValue:event.target.value});  \r\n       \r\n      };\r\n\r\n      handleClick() {\r\n        this.setState(prevState => ({\r\n          isToggleOn: !prevState.isToggleOn,\r\n          display: prevState.isToggleOn ? 'none': 'block'\r\n        }));\r\n    \r\n      }\r\n    \r\n      cancelClick(){\r\n        this.setState(prevState => ({\r\n          isToggleOn: !prevState.isToggleOn,\r\n          display: prevState.isToggleOn ? 'none': 'block'\r\n        }));\r\n      }\r\n    \r\n      saveClick() {\r\n        this.setState(prevState => ({\r\n          isToggleOn: !prevState.isToggleOn,\r\n          display: prevState.isToggleOn ? 'none': 'block'\r\n        }));\r\n        console.log('save');\r\n        console.log(this.state.textFieldValue);\r\n        this.setState({count: this.state.count + 1},()=>{\r\n          console.log(this.state);\r\n          let content_name = {userName: this.state.textFieldValue};\r\n          console.log(content_name);\r\n           // The actual fetch request\r\n           \r\n        fetch('http://localhost:8090/users/1', {\r\n          method: 'put',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(content_name)\r\n        }).then(response => {\r\n          if(response.ok) {\r\n              response.json().then(data => {\r\n                  console.log(data);\r\n                  fetch( 'http://localhost:8090/users/1')\r\n                    .then(response => response.json())\r\n                    .then(data =>{\r\n                    //console.log(data)\r\n                    this.setState({users: data})  ////赋值到本地数据\r\n                    console.log(this.state.users.userName)\r\n                    const { setValue } = this.props;\r\n                    setValue(this.state.users);\r\n                    }).catch(e => console.log('错误:', e))  \r\n              });\r\n          } else {\r\n              console.log(\"请求不成功，状态码为\", response.status);\r\n          }\r\n        }).catch(function(e) {\r\n          console.log(\"Oops, error\");\r\n        });\r\n         });\r\n    \r\n      }\r\n    render(){\r\n        const { classes } = this.props;\r\n    return ( \r\n        <Fragment>\r\n        <div className={about}>\r\n            <div>ABOUT</div>\r\n            <div>Edit your description now.</div>\r\n            <IconButton className={classes.button+\" \"+updatebutton}>\r\n                <CreateOutlinedIcon />\r\n            </IconButton>\r\n        </div>\r\n        <div className={about_update} \r\n            style={{display: this.state.display}}>    \r\n            <div className={classes.upload_button}>\r\n            <TextField id=\"standard-basic\" label=\"Name\" onChange={this.handleOnChange} />\r\n            <Button variant=\"contained\" onClick={this.handleClick}>\r\n            Cancel\r\n            </Button>\r\n            <Button variant=\"contained\" onClick={this.saveClick}>\r\n                Save\r\n            </Button>\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n      );\r\n    }\r\n\r\n  }\r\n\r\nexport default withStyles(useStyles)(About);"]},"metadata":{},"sourceType":"module"}