{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack\\\\bookingapp\\\\my-app\\\\src\\\\Components\\\\Image.js\";\nimport React from \"react\";\nimport { storage } from \"./firebase/firebase\";\n\nclass Image extends React.Component {\n  constructor() {\n    super();\n\n    this.onFileChange = event => {\n      if (event.target.files[0]) {\n        const image = event.target.files[0];\n        this.setState({\n          image: image,\n          path: URL.createObjectURL(event.target.files[0])\n        });\n      }\n    };\n\n    this.uploadFile = event => {\n      event.preventDefault();\n      console.log(this.state);\n      const {\n        image\n      } = this.state; //const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      //uploadTask.on('state_changed', progress, error,complete)\n\n      if (image === null) {\n        console.error(`not an image, should be ${typeof image}`);\n      }\n\n      const uploadTask = storage.ref(`/images/${image.name}`).put(image);\n      uploadTask.on(\"state_changed\", snapShot => {//takes a snap shot of the process as it is happening\n        //console.log(snapShot);\n      }, err => {\n        //catches the errors\n        console.log(err);\n      }, () => {\n        // gets the functions from storage refences the image storage in firebase by the children\n        // gets the download url then sets the image from firebase as the value for the imgUrl key:\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n          console.log(url);\n          this.setState({\n            url\n          });\n        });\n      });\n    };\n\n    this.imageStyle = {\n      width: \"300px\",\n      height: \"200px\"\n    };\n    this.state = {\n      image: null,\n      path: null,\n      url: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Upload a file\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.onFileChange,\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      style: this.imageStyle,\n      src: this.state.path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.url,\n      alt: \"upload image\",\n      style: this.imageStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.uploadFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"Confirm\")));\n  }\n\n}\n\nexport default Image;","map":{"version":3,"sources":["D:/fullstack/bookingapp/my-app/src/Components/Image.js"],"names":["React","storage","Image","Component","constructor","onFileChange","event","target","files","image","setState","path","URL","createObjectURL","uploadFile","preventDefault","console","log","state","error","uploadTask","ref","name","put","on","snapShot","err","child","getDownloadURL","then","url","imageStyle","width","height","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { storage } from \"./firebase/firebase\";\r\n\r\nclass Image extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      image: null,\r\n      path: null,\r\n      url: \"\",\r\n    };\r\n  }\r\n\r\n  onFileChange = (event) => {\r\n    if (event.target.files[0]) {\r\n      const image = event.target.files[0];\r\n      this.setState({\r\n        image: image,\r\n        path: URL.createObjectURL(event.target.files[0]),\r\n      });\r\n    }\r\n  };\r\n\r\n  uploadFile = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    const { image } = this.state;\r\n    //const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n    //uploadTask.on('state_changed', progress, error,complete)\r\n    if (image === null) {\r\n      console.error(`not an image, should be ${typeof image}`);\r\n    }\r\n\r\n    const uploadTask = storage.ref(`/images/${image.name}`).put(image);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapShot) => {\r\n        //takes a snap shot of the process as it is happening\r\n        //console.log(snapShot);\r\n      },\r\n      (err) => {\r\n        //catches the errors\r\n        console.log(err);\r\n      },\r\n      () => {\r\n        // gets the functions from storage refences the image storage in firebase by the children\r\n        // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n        storage\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            console.log(url);\r\n            this.setState({ url });\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  imageStyle = {\r\n    width: \"300px\",\r\n    height: \"200px\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"App-intro\">\r\n          <h3>Upload a file</h3>\r\n          <input onChange={this.onFileChange} type=\"file\"></input>\r\n          <img style={this.imageStyle} src={this.state.path} />\r\n          <img\r\n            src={this.state.url}\r\n            alt=\"upload image\"\r\n            style={this.imageStyle}\r\n          />\r\n          <button onClick={this.uploadFile}>Confirm</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Image;"]},"metadata":{},"sourceType":"module"}