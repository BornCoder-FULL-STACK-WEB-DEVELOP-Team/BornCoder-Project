{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack\\\\bookingapp\\\\my-app\\\\src\\\\Components\\\\Background.js\";\nimport React, { Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { deepOrange, blueGrey } from '@material-ui/core/colors';\nimport { info_update, background_container, avatar, updatebutton } from '../Styles/Background.module.scss';\nimport IconButton from '@material-ui/core/IconButton';\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\nimport { storage } from \"./firebase/firebase\";\n\nconst useStyles = theme => ({\n  default: {\n    fontSize: theme.spacing(7),\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  },\n  button: {\n    backgroundColor: blueGrey[300]\n  }\n});\n\nclass Background extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onFileChange = event => {\n      if (event.target.files[0]) {\n        const image = event.target.files[0];\n        this.setState({\n          image: image,\n          path: URL.createObjectURL(event.target.files[0])\n        });\n      }\n    };\n\n    this.uploadFile = event => {\n      event.preventDefault();\n      console.log(this.state);\n      const {\n        image\n      } = this.state; //const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      //uploadTask.on('state_changed', progress, error,complete)\n\n      if (image === null) {\n        console.error(`not an image, should be ${typeof image}`);\n      }\n\n      const uploadTask = storage.ref(`/images/${image.name}`).put(image);\n      uploadTask.on(\"state_changed\", snapShot => {//takes a snap shot of the process as it is happening\n        //console.log(snapShot);\n      }, err => {\n        //catches the errors\n        console.log(err);\n      }, () => {\n        // gets the functions from storage refences the image storage in firebase by the children\n        // gets the download url then sets the image from firebase as the value for the imgUrl key:\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n          console.log(url);\n          this.setState({\n            url\n          });\n        });\n      });\n    };\n\n    this.state = {\n      image: null,\n      path: null,\n      url: \"\",\n      isToggleOn: true,\n      dispaly: 'block'\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn,\n      display: prevState.isToggleOn ? 'none' : 'block'\n    }));\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: background_container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.onFileChange,\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Avatar, {\n      alt: \"defaut\",\n      src: this.state.url,\n      className: classes.default + \" \" + avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, \"q\"), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.handleClick,\n      className: classes.button + \" \" + updatebutton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CreateOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.uploadFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CreateOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: info_update,\n      style: {\n        display: this.state.display\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default withStyles(useStyles)(Background);","map":{"version":3,"sources":["D:/fullstack/bookingapp/my-app/src/Components/Background.js"],"names":["React","Fragment","withStyles","Avatar","deepOrange","blueGrey","info_update","background_container","avatar","updatebutton","IconButton","CreateOutlinedIcon","storage","useStyles","theme","default","fontSize","spacing","color","palette","getContrastText","backgroundColor","width","height","button","Background","Component","constructor","props","onFileChange","event","target","files","image","setState","path","URL","createObjectURL","uploadFile","preventDefault","console","log","state","error","uploadTask","ref","name","put","on","snapShot","err","child","getDownloadURL","then","url","isToggleOn","dispaly","handleClick","bind","prevState","display","render","classes"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange,blueGrey} from '@material-ui/core/colors';\r\nimport {info_update,background_container,avatar,updatebutton} from '../Styles/Background.module.scss';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\r\nimport { storage } from \"./firebase/firebase\";\r\n\r\nconst useStyles = theme => ({\r\n    default: {\r\n      fontSize:theme.spacing(7),\r\n      color: theme.palette.getContrastText(deepOrange[500]),\r\n      backgroundColor: deepOrange[500],\r\n      width: theme.spacing(10),\r\n      height: theme.spacing(10),\r\n    },\r\n    button:{\r\n      backgroundColor:blueGrey[300],\r\n    },\r\n  });\r\n\r\n\r\nclass Background extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image: null,\r\n      path: null,\r\n      url: \"\",\r\n      isToggleOn: true,\r\n      dispaly: 'block'\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  \r\n  \r\n        \r\n \r\n  handleClick() {\r\n    this.setState(prevState => ({\r\n      isToggleOn: !prevState.isToggleOn,\r\n      display: prevState.isToggleOn ? 'none': 'block'\r\n    }));\r\n  }\r\n\r\n\r\n\r\n  onFileChange = (event) => {\r\n    if (event.target.files[0]) {\r\n      const image = event.target.files[0];\r\n      this.setState({\r\n        image: image,\r\n        path: URL.createObjectURL(event.target.files[0]),\r\n      });\r\n    }\r\n  };\r\n\r\n  uploadFile = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    const { image } = this.state;\r\n    //const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n    //uploadTask.on('state_changed', progress, error,complete)\r\n    if (image === null) {\r\n      console.error(`not an image, should be ${typeof image}`);\r\n    }\r\n\r\n  const uploadTask = storage.ref(`/images/${image.name}`).put(image);\r\n\r\n  uploadTask.on(\r\n    \"state_changed\",\r\n    (snapShot) => {\r\n      //takes a snap shot of the process as it is happening\r\n      //console.log(snapShot);\r\n    },\r\n    (err) => {\r\n      //catches the errors\r\n      console.log(err);\r\n    },\r\n    () => {\r\n      // gets the functions from storage refences the image storage in firebase by the children\r\n      // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n      storage\r\n        .ref(\"images\")\r\n        .child(image.name)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          console.log(url);\r\n          this.setState({ url });\r\n        });\r\n    }\r\n  );\r\n};\r\n\r\n    \r\n  render(){\r\n    const { classes } = this.props;\r\n  return (\r\n    <Fragment>\r\n    <div className={background_container}>\r\n      <input onChange={this.onFileChange} type=\"file\"></input>\r\n      <Avatar alt=\"defaut\" src={this.state.url} className={classes.default+\" \"+avatar}>\r\n        q\r\n      </Avatar>\r\n      <IconButton onClick={this.handleClick} className={classes.button+\" \"+updatebutton}>\r\n        <CreateOutlinedIcon />\r\n      </IconButton>\r\n      <IconButton \r\n        onClick={this.uploadFile} >\r\n        <CreateOutlinedIcon />\r\n      </IconButton>    \r\n    </div>\r\n    <div \r\n      className={info_update} \r\n      style={{display: this.state.display}}>\r\n    </div> \r\n    </Fragment>\r\n  );\r\n  }}\r\n\r\n\r\nexport default withStyles(useStyles)(Background);"]},"metadata":{},"sourceType":"module"}