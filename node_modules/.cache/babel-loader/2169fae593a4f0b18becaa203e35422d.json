{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack\\\\bookingapp\\\\my-app\\\\src\\\\Components\\\\Background.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { deepOrange, blueGrey } from '@material-ui/core/colors';\nimport { background_container, avatar, updatebutton } from '../Styles/Background.module.scss';\nimport IconButton from '@material-ui/core/IconButton';\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\n\nconst useStyles = theme => ({\n  default: {\n    fontSize: theme.spacing(7),\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  },\n  button: {\n    backgroundColor: blueGrey[300]\n  }\n});\n\nclass Background extends React.Component {\n  constructor() {\n    super();\n\n    this.onFileChange = event => {\n      if (event.target.files[0]) {\n        const image = event.target.files[0];\n        this.setState({\n          image: image,\n          path: URL.createObjectURL(event.target.files[0])\n        });\n      }\n    };\n\n    this.uploadFile = event => {\n      event.preventDefault();\n      console.log(this.state);\n      const {\n        image\n      } = this.state; //const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      //uploadTask.on('state_changed', progress, error,complete)\n\n      if (image === null) {\n        console.error(`not an image, should be ${typeof image}`);\n      }\n\n      const uploadTask = storage.ref(`/images/${image.name}`).put(image);\n      uploadTask.on(\"state_changed\", snapShot => {//takes a snap shot of the process as it is happening\n        //console.log(snapShot);\n      }, err => {\n        //catches the errors\n        console.log(err);\n      }, () => {\n        // gets the functions from storage refences the image storage in firebase by the children\n        // gets the download url then sets the image from firebase as the value for the imgUrl key:\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n          console.log(url);\n          this.setState({\n            url\n          });\n        });\n      });\n    };\n\n    this.state = {\n      image: null,\n      path: null,\n      url: \"\"\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: background_container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      alt: \"defaut\",\n      src: this.state.path,\n      className: classes.default + \" \" + avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, \"q\"), /*#__PURE__*/React.createElement(IconButton, {\n      className: classes.button + \" \" + updatebutton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CreateOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default withStyles(useStyles)(Background);","map":{"version":3,"sources":["D:/fullstack/bookingapp/my-app/src/Components/Background.js"],"names":["React","withStyles","Avatar","deepOrange","blueGrey","background_container","avatar","updatebutton","IconButton","CreateOutlinedIcon","useStyles","theme","default","fontSize","spacing","color","palette","getContrastText","backgroundColor","width","height","button","Background","Component","constructor","onFileChange","event","target","files","image","setState","path","URL","createObjectURL","uploadFile","preventDefault","console","log","state","error","uploadTask","storage","ref","name","put","on","snapShot","err","child","getDownloadURL","then","url","render","classes","props"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange,blueGrey} from '@material-ui/core/colors';\r\nimport {background_container,avatar,updatebutton} from '../Styles/Background.module.scss';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\r\n\r\nconst useStyles = theme => ({\r\n    default: {\r\n      fontSize:theme.spacing(7),\r\n      color: theme.palette.getContrastText(deepOrange[500]),\r\n      backgroundColor: deepOrange[500],\r\n      width: theme.spacing(10),\r\n      height: theme.spacing(10),\r\n    },\r\n    button:{\r\n      backgroundColor:blueGrey[300],\r\n    },\r\n  });\r\n\r\n\r\nclass Background extends React.Component{\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      image: null,\r\n      path: null,\r\n      url: \"\",\r\n    };\r\n  }\r\n\r\n  onFileChange = (event) => {\r\n    if (event.target.files[0]) {\r\n      const image = event.target.files[0];\r\n      this.setState({\r\n        image: image,\r\n        path: URL.createObjectURL(event.target.files[0]),\r\n      });\r\n    }\r\n  };\r\n\r\n  uploadFile = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    const { image } = this.state;\r\n    //const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n    //uploadTask.on('state_changed', progress, error,complete)\r\n    if (image === null) {\r\n      console.error(`not an image, should be ${typeof image}`);\r\n    }\r\n\r\n    const uploadTask = storage.ref(`/images/${image.name}`).put(image);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapShot) => {\r\n        //takes a snap shot of the process as it is happening\r\n        //console.log(snapShot);\r\n      },\r\n      (err) => {\r\n        //catches the errors\r\n        console.log(err);\r\n      },\r\n      () => {\r\n        // gets the functions from storage refences the image storage in firebase by the children\r\n        // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n        storage\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            console.log(url);\r\n            this.setState({ url });\r\n          });\r\n      }\r\n    );\r\n  };\r\n  \r\n  render(){\r\n    const { classes } = this.props;\r\n  return (\r\n    <div className={background_container}>\r\n      <Avatar alt=\"defaut\" src={this.state.path} className={classes.default+\" \"+avatar}>\r\n        q\r\n      </Avatar>\r\n      <IconButton className={classes.button+\" \"+updatebutton}>\r\n        <CreateOutlinedIcon />\r\n      </IconButton>\r\n    </div>  \r\n  );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Background);"]},"metadata":{},"sourceType":"module"}