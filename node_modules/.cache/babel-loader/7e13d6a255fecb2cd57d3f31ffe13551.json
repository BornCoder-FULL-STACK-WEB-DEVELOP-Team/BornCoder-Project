{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack\\\\bookingapp\\\\my-app\\\\src\\\\Components\\\\Background.js\";\nimport React, { Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { deepOrange, blueGrey } from '@material-ui/core/colors';\nimport { image_div, back_img, upload_button, cloud_upload, info_update, background_container, avatar, updatebutton } from '../Styles/Background.module.scss';\nimport IconButton from '@material-ui/core/IconButton';\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { storage } from \"./firebase/firebase\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = theme => ({\n  default: {\n    fontSize: theme.spacing(7),\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  },\n  button: {\n    backgroundColor: blueGrey[300]\n  },\n  update_button: {\n    backgroundColor: \"white\"\n  },\n  upload_button: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n});\n\nclass Background extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = event => {\n      console.log('Click'); //this.setState({tFieldValue:event.target.value});\n\n      this.setState({\n        tFieldValue: 'alice'\n      });\n      console.log(event.target.value);\n      console.log(this.state);\n      let content_name = {\n        userName: this.state.textFieldValue\n      }; // The actual fetch request\n\n      fetch('http://localhost:8090/users/1', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(content_name)\n      }).then(response => {\n        if (response.ok) {\n          response.json().then(data => {\n            console.log(data);\n            fetch('http://localhost:8090/users/1').then(response => response.json()).then(data => {\n              //console.log(data)\n              this.setState({\n                users: data\n              }); ////赋值到本地数据\n\n              console.log(this.state.users.userName);\n            }).catch(e => console.log('错误:', e));\n          });\n        } else {\n          console.log(\"请求不成功，状态码为\", response.status);\n        }\n      }).catch(function (e) {\n        console.log(\"Oops, error\");\n      });\n    };\n\n    this.onFileChange = event => {\n      if (event.target.files[0]) {\n        const image_file = event.target.files[0];\n        this.setState({\n          image: image_file,\n          path: URL.createObjectURL(event.target.files[0])\n        });\n      }\n    };\n\n    this.uploadFile = event => {\n      this.setState(prevState => ({\n        isToggleOn: !prevState.isToggleOn,\n        display: prevState.isToggleOn ? 'none' : 'block'\n      }));\n      event.preventDefault();\n      console.log(this.state);\n      const {\n        image\n      } = this.state; //const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      //uploadTask.on('state_changed', progress, error,complete)\n\n      if (image === null) {\n        console.error(`not an image, should be ${typeof image}`);\n      }\n\n      const uploadTask = storage.ref(`/images/${image.name}`).put(image);\n      uploadTask.on(\"state_changed\", snapShot => {//takes a snap shot of the process as it is happening\n        //console.log(snapShot);\n      }, err => {\n        //catches the errors\n        console.log(err);\n      }, () => {\n        // gets the functions from storage refences the image storage in firebase by the children\n        // gets the download url then sets the image from firebase as the value for the imgUrl key:\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n          console.log(url);\n          let content = {\n            userPhoto: url\n          }; // The actual fetch request\n\n          fetch('http://localhost:8090/users/1', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(content)\n          }).then(response => {\n            if (response.ok) {\n              response.json().then(data => {\n                console.log(data);\n                fetch('http://localhost:8090/users/1').then(response => response.json()).then(data => {\n                  //console.log(data)\n                  this.setState({\n                    users: data\n                  }); ////赋值到本地数据\n\n                  console.log(this.state.users.userPhoto);\n                }).catch(e => console.log('错误:', e));\n              });\n            } else {\n              console.log(\"请求不成功，状态码为\", response.status);\n            }\n          }).catch(function (e) {\n            console.log(\"Oops, error\");\n          });\n        });\n      });\n    };\n\n    this.state = {\n      image: null,\n      path: null,\n      isToggleOn: false,\n      display: 'none',\n      users: [],\n      tFieldValue: \"\"\n    };\n    this.fileInputEl = React.createRef();\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    //网络请求都是放在此生命周期函数中\n    fetch('http://localhost:8090/users/1').then(response => response.json()).then(data => {\n      console.log(data);\n      this.setState({\n        users: data\n      }); ////赋值到本地数据\n\n      console.log(this.state.users);\n    }).catch(e => console.log('错误:', e));\n  }\n\n  handleClick() {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn,\n      display: prevState.isToggleOn ? 'none' : 'block'\n    }));\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: background_container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      ref: this.fileInputEl //挂载ref\n      ,\n      accept: \".jpg,.jpeg,.png\" //限制文件类型\n      ,\n      hidden: true //隐藏input \n      ,\n      onChange: this.onFileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: image_div,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: back_img,\n      src: this.state.users.backgroundPhoto,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Avatar, {\n      alt: \"defaut\",\n      src: this.state.users.userPhoto,\n      className: classes.default + \" \" + avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }\n    }, \"q\"), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.handleClick,\n      className: classes.button + \" \" + updatebutton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CreateOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => {\n        this.fileInputEl.current.click(); //当点击a标签的时候触发事件\n      },\n      className: classes.update_button + \" \" + cloud_upload,\n      style: {\n        display: this.state.display\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CloudUploadIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.uploadFile,\n      variant: \"contained\",\n      className: upload_button,\n      style: {\n        display: this.state.display\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }\n    }, \"Upload\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: info_update,\n      style: {\n        display: this.state.display\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.upload_button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      label: \"sherry\",\n      onChange: this.handleOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }, \"Save\"))));\n  }\n\n}\n\nexport default withStyles(useStyles)(Background);","map":{"version":3,"sources":["D:/fullstack/bookingapp/my-app/src/Components/Background.js"],"names":["React","Fragment","withStyles","Avatar","deepOrange","blueGrey","image_div","back_img","upload_button","cloud_upload","info_update","background_container","avatar","updatebutton","IconButton","CreateOutlinedIcon","CloudUploadIcon","storage","Button","TextField","useStyles","theme","default","fontSize","spacing","color","palette","getContrastText","backgroundColor","width","height","button","update_button","margin","Background","Component","constructor","props","handleOnChange","event","console","log","setState","tFieldValue","target","value","state","content_name","userName","textFieldValue","fetch","method","headers","body","JSON","stringify","then","response","ok","json","data","users","catch","e","status","onFileChange","files","image_file","image","path","URL","createObjectURL","uploadFile","prevState","isToggleOn","display","preventDefault","error","uploadTask","ref","name","put","on","snapShot","err","child","getDownloadURL","url","content","userPhoto","fileInputEl","createRef","handleClick","bind","componentDidMount","render","classes","backgroundPhoto","current","click"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,EAAoBC,QAApB,QAAmC,0BAAnC;AACA,SAAQC,SAAR,EAAkBC,QAAlB,EAA2BC,aAA3B,EAAyCC,YAAzC,EAAsDC,WAAtD,EAAkEC,oBAAlE,EAAuFC,MAAvF,EAA8FC,YAA9F,QAAiH,kCAAjH;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,KAAK;AACxBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAACF,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAEPC,IAAAA,KAAK,EAAEJ,KAAK,CAACK,OAAN,CAAcC,eAAd,CAA8BvB,UAAU,CAAC,GAAD,CAAxC,CAFA;AAGPwB,IAAAA,eAAe,EAAExB,UAAU,CAAC,GAAD,CAHpB;AAIPyB,IAAAA,KAAK,EAAER,KAAK,CAACG,OAAN,CAAc,EAAd,CAJA;AAKPM,IAAAA,MAAM,EAAET,KAAK,CAACG,OAAN,CAAc,EAAd;AALD,GADe;AAQxBO,EAAAA,MAAM,EAAC;AACLH,IAAAA,eAAe,EAACvB,QAAQ,CAAC,GAAD;AADnB,GARiB;AAWxB2B,EAAAA,aAAa,EAAC;AACZJ,IAAAA,eAAe,EAAC;AADJ,GAXU;AAcxBpB,EAAAA,aAAa,EAAE;AACb,aAAS;AACPyB,MAAAA,MAAM,EAAEZ,KAAK,CAACG,OAAN,CAAc,CAAd;AADD;AADI;AAdS,CAAL,CAAvB;;AAsBA,MAAMU,UAAN,SAAyBlC,KAAK,CAACmC,SAA/B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,cAfmB,GAeFC,KAAK,IAAI;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADwB,CAExB;;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAC;AAAb,OAAd;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACK,MAAN,CAAaC,KAAzB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,KAAjB;AACA,UAAIC,YAAY,GAAG;AAACC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG;AAAtB,OAAnB,CANwB,CAOxB;;AAEAC,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,QAAAA,MAAM,EAAE,KAD6B;AAErCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF4B;AAKrCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,YAAf;AAL+B,OAAlC,CAAL,CAMGS,IANH,CAMQC,QAAQ,IAAI;AAClB,YAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZD,UAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqBI,IAAI,IAAI;AACzBpB,YAAAA,OAAO,CAACC,GAAR,CAAYmB,IAAZ;AACAV,YAAAA,KAAK,CAAE,+BAAF,CAAL,CACGM,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EADpB,EAEGH,IAFH,CAEQI,IAAI,IAAG;AACb;AACA,mBAAKlB,QAAL,CAAc;AAACmB,gBAAAA,KAAK,EAAED;AAAR,eAAd,EAFa,CAEiB;;AAC9BpB,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,KAAL,CAAWe,KAAX,CAAiBb,QAA7B;AACC,aANH,EAMKc,KANL,CAMWC,CAAC,IAAIvB,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBsB,CAAnB,CANhB;AAOH,WATD;AAUH,SAXD,MAWO;AACHvB,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BgB,QAAQ,CAACO,MAAnC;AACH;AACF,OArBD,EAqBGF,KArBH,CAqBS,UAASC,CAAT,EAAY;AACnBvB,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,OAvBD;AAwBD,KAhDkB;;AAAA,SAuEnBwB,YAvEmB,GAuEH1B,KAAD,IAAW;AACxB,UAAIA,KAAK,CAACK,MAAN,CAAasB,KAAb,CAAmB,CAAnB,CAAJ,EAA2B;AACzB,cAAMC,UAAU,GAAG5B,KAAK,CAACK,MAAN,CAAasB,KAAb,CAAmB,CAAnB,CAAnB;AACA,aAAKxB,QAAL,CAAc;AACZ0B,UAAAA,KAAK,EAAED,UADK;AAEZE,UAAAA,IAAI,EAAEC,GAAG,CAACC,eAAJ,CAAoBhC,KAAK,CAACK,MAAN,CAAasB,KAAb,CAAmB,CAAnB,CAApB;AAFM,SAAd;AAKD;AACF,KAhFkB;;AAAA,SAkFnBM,UAlFmB,GAkFLjC,KAAD,IAAW;AACtB,WAAKG,QAAL,CAAc+B,SAAS,KAAK;AAC1BC,QAAAA,UAAU,EAAE,CAACD,SAAS,CAACC,UADG;AAE1BC,QAAAA,OAAO,EAAEF,SAAS,CAACC,UAAV,GAAuB,MAAvB,GAA+B;AAFd,OAAL,CAAvB;AAIAnC,MAAAA,KAAK,CAACqC,cAAN;AACApC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,KAAjB;AACA,YAAM;AAAEsB,QAAAA;AAAF,UAAY,KAAKtB,KAAvB,CAPsB,CAQtB;AACA;;AACA,UAAIsB,KAAK,KAAK,IAAd,EAAoB;AAClB5B,QAAAA,OAAO,CAACqC,KAAR,CAAe,2BAA0B,OAAOT,KAAM,EAAtD;AACD;;AAEH,YAAMU,UAAU,GAAG7D,OAAO,CAAC8D,GAAR,CAAa,WAAUX,KAAK,CAACY,IAAK,EAAlC,EAAqCC,GAArC,CAAyCb,KAAzC,CAAnB;AAEAU,MAAAA,UAAU,CAACI,EAAX,CACE,eADF,EAEGC,QAAD,IAAc,CACZ;AACA;AACD,OALH,EAMGC,GAAD,IAAS;AACP;AACA5C,QAAAA,OAAO,CAACC,GAAR,CAAY2C,GAAZ;AACD,OATH,EAUE,MAAM;AACJ;AACA;AACAnE,QAAAA,OAAO,CACJ8D,GADH,CACO,QADP,EAEGM,KAFH,CAESjB,KAAK,CAACY,IAFf,EAGGM,cAHH,GAIG9B,IAJH,CAIS+B,GAAD,IAAS;AACb/C,UAAAA,OAAO,CAACC,GAAR,CAAY8C,GAAZ;AACA,cAAIC,OAAO,GAAG;AAACC,YAAAA,SAAS,EAAEF;AAAZ,WAAd,CAFa,CAGf;;AAGArC,UAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,YAAAA,MAAM,EAAE,KAD6B;AAErCC,YAAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAF4B;AAKrCC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeiC,OAAf;AAL+B,WAAlC,CAAL,CAMGhC,IANH,CAMQC,QAAQ,IAAI;AAClB,gBAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZD,cAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqBI,IAAI,IAAI;AACzBpB,gBAAAA,OAAO,CAACC,GAAR,CAAYmB,IAAZ;AACAV,gBAAAA,KAAK,CAAE,+BAAF,CAAL,CACGM,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EADpB,EAEGH,IAFH,CAEQI,IAAI,IAAG;AACb;AACA,uBAAKlB,QAAL,CAAc;AAACmB,oBAAAA,KAAK,EAAED;AAAR,mBAAd,EAFa,CAEiB;;AAC9BpB,kBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,KAAL,CAAWe,KAAX,CAAiB4B,SAA7B;AACC,iBANH,EAMK3B,KANL,CAMWC,CAAC,IAAIvB,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBsB,CAAnB,CANhB;AAOH,eATD;AAUH,aAXD,MAWO;AACHvB,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BgB,QAAQ,CAACO,MAAnC;AACH;AACF,WArBD,EAqBGF,KArBH,CAqBS,UAASC,CAAT,EAAY;AACnBvB,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,WAvBD;AAwBC,SAlCH;AAwCD,OArDH;AAuDD,KAzJoB;;AAEjB,SAAKK,KAAL,GAAa;AACXsB,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,IAAI,EAAE,IAFK;AAGXK,MAAAA,UAAU,EAAE,KAHD;AAIXC,MAAAA,OAAO,EAAE,MAJE;AAKXd,MAAAA,KAAK,EAAE,EALI;AAMXlB,MAAAA,WAAW,EAAC;AAND,KAAb;AASA,SAAK+C,WAAL,GAAmB1F,KAAK,CAAC2F,SAAN,EAAnB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAqCDC,EAAAA,iBAAiB,GAAG;AAAC;AACnB5C,IAAAA,KAAK,CAAE,+BAAF,CAAL,CACCM,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EADlB,EAECH,IAFD,CAEMI,IAAI,IAAG;AACXpB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,IAAZ;AACA,WAAKlB,QAAL,CAAc;AAACmB,QAAAA,KAAK,EAAED;AAAR,OAAd,EAFW,CAEmB;;AAC9BpB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,KAAL,CAAWe,KAAvB;AACD,KAND,EAOCC,KAPD,CAOOC,CAAC,IAAIvB,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBsB,CAAnB,CAPZ;AAQH;;AAEC6B,EAAAA,WAAW,GAAG;AACZ,SAAKlD,QAAL,CAAc+B,SAAS,KAAK;AAC1BC,MAAAA,UAAU,EAAE,CAACD,SAAS,CAACC,UADG;AAE1BC,MAAAA,OAAO,EAAEF,SAAS,CAACC,UAAV,GAAuB,MAAvB,GAA+B;AAFd,KAAL,CAAvB;AAKD;;AAyFDqB,EAAAA,MAAM,GAAE;AACN,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAK3D,KAAzB;AACF,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAE1B,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,GAAG,EAAE,KAAK+E,WAFZ,CAEyB;AAFzB;AAGE,MAAA,MAAM,EAAC,iBAHT,CAG2B;AAH3B;AAIE,MAAA,MAAM,MAJR,CAIS;AAJT;AAKE,MAAA,QAAQ,EAAE,KAAKzB,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AAAK,MAAA,SAAS,EAAE3D,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAEC,QAAhB;AAA0B,MAAA,GAAG,EAAE,KAAKuC,KAAL,CAAWe,KAAX,CAAiBoC,eAAhD;AAAiE,MAAA,GAAG,EAAC,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARF,eAWE,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAqB,MAAA,GAAG,EAAE,KAAKnD,KAAL,CAAWe,KAAX,CAAiB4B,SAA3C;AAAsD,MAAA,SAAS,EAAEO,OAAO,CAAC1E,OAAR,GAAgB,GAAhB,GAAoBV,MAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAXF,eAcE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKgF,WAA1B;AAAuC,MAAA,SAAS,EAAEI,OAAO,CAACjE,MAAR,GAAe,GAAf,GAAmBlB,YAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAdF,eAiBE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,MAAM;AACzB,aAAK6E,WAAL,CAAiBQ,OAAjB,CAAyBC,KAAzB,GADyB,CACS;AACnC,OAFD;AAEG,MAAA,SAAS,EAAEH,OAAO,CAAChE,aAAR,GAAsB,GAAtB,GAA0BvB,YAFxC;AAEsD,MAAA,KAAK,EAAE;AAACkE,QAAAA,OAAO,EAAE,KAAK7B,KAAL,CAAW6B;AAArB,OAF7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGA,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CAjBF,eAsBI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKH,UAAtB;AAAkC,MAAA,OAAO,EAAC,WAA1C;AAAsD,MAAA,SAAS,EAAEhE,aAAjE;AAAgF,MAAA,KAAK,EAAE;AAACmE,QAAAA,OAAO,EAAE,KAAK7B,KAAL,CAAW6B;AAArB,OAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBJ,CADA,eAyBA;AACE,MAAA,SAAS,EAAEjE,WADb;AAEE,MAAA,KAAK,EAAE;AAACiE,QAAAA,OAAO,EAAE,KAAK7B,KAAL,CAAW6B;AAArB,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE;AAAK,MAAA,SAAS,EAAEqB,OAAO,CAACxF,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,gBAAd;AAA+B,MAAA,KAAK,EAAC,QAArC;AAA8C,MAAA,QAAQ,EAAE,KAAK8B,cAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CAHF,CAzBA,CADF;AA0CC;;AAzMqC;;AA4MxC,eAAepC,UAAU,CAACkB,SAAD,CAAV,CAAsBc,UAAtB,CAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange,blueGrey} from '@material-ui/core/colors';\r\nimport {image_div,back_img,upload_button,cloud_upload,info_update,background_container,avatar,updatebutton} from '../Styles/Background.module.scss';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { storage } from \"./firebase/firebase\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = theme => ({\r\n    default: {\r\n      fontSize:theme.spacing(7),\r\n      color: theme.palette.getContrastText(deepOrange[500]),\r\n      backgroundColor: deepOrange[500],\r\n      width: theme.spacing(10),\r\n      height: theme.spacing(10),\r\n    },\r\n    button:{\r\n      backgroundColor:blueGrey[300],\r\n    },\r\n    update_button:{\r\n      backgroundColor:\"white\",\r\n    },\r\n    upload_button: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  });\r\n\r\n\r\nclass Background extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image: null,\r\n      path: null,\r\n      isToggleOn: false,\r\n      display: 'none',\r\n      users: [],\r\n      tFieldValue:\"\",\r\n\r\n    };\r\n    this.fileInputEl = React.createRef();\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleOnChange = event => {\r\n    console.log('Click');\r\n    //this.setState({tFieldValue:event.target.value});\r\n    this.setState({tFieldValue:'alice'});\r\n    console.log(event.target.value);\r\n    console.log(this.state);\r\n    let content_name = {userName: this.state.textFieldValue};\r\n    // The actual fetch request\r\n       \r\n    fetch('http://localhost:8090/users/1', {\r\n      method: 'put',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(content_name)\r\n    }).then(response => {\r\n      if(response.ok) {\r\n          response.json().then(data => {\r\n              console.log(data);\r\n              fetch( 'http://localhost:8090/users/1')\r\n                .then(response => response.json())\r\n                .then(data =>{\r\n                //console.log(data)\r\n                this.setState({users: data})  ////赋值到本地数据\r\n                console.log(this.state.users.userName)\r\n                }).catch(e => console.log('错误:', e))  \r\n          });\r\n      } else {\r\n          console.log(\"请求不成功，状态码为\", response.status);\r\n      }\r\n    }).catch(function(e) {\r\n      console.log(\"Oops, error\");\r\n    });\r\n  };\r\n  \r\n  componentDidMount() {//网络请求都是放在此生命周期函数中\r\n    fetch( 'http://localhost:8090/users/1')\r\n    .then(response => response.json())\r\n    .then(data =>{\r\n      console.log(data)\r\n      this.setState({users: data})  ////赋值到本地数据\r\n      console.log(this.state.users)\r\n    })\r\n    .catch(e => console.log('错误:', e))       \r\n}\r\n \r\n  handleClick() {\r\n    this.setState(prevState => ({\r\n      isToggleOn: !prevState.isToggleOn,\r\n      display: prevState.isToggleOn ? 'none': 'block'\r\n    }));\r\n\r\n  }\r\n\r\n\r\n\r\n  onFileChange = (event) => {\r\n    if (event.target.files[0]) {\r\n      const image_file = event.target.files[0];\r\n      this.setState({\r\n        image: image_file,\r\n        path: URL.createObjectURL(event.target.files[0]),\r\n      });\r\n\r\n    }\r\n  };\r\n\r\n  uploadFile = (event) => {\r\n    this.setState(prevState => ({\r\n      isToggleOn: !prevState.isToggleOn,\r\n      display: prevState.isToggleOn ? 'none': 'block'\r\n    }));  \r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    const { image } = this.state;\r\n    //const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n    //uploadTask.on('state_changed', progress, error,complete)\r\n    if (image === null) {\r\n      console.error(`not an image, should be ${typeof image}`);\r\n    }\r\n\r\n  const uploadTask = storage.ref(`/images/${image.name}`).put(image);\r\n\r\n  uploadTask.on(\r\n    \"state_changed\",\r\n    (snapShot) => {\r\n      //takes a snap shot of the process as it is happening\r\n      //console.log(snapShot);\r\n    },\r\n    (err) => {\r\n      //catches the errors\r\n      console.log(err);\r\n    },\r\n    () => {\r\n      // gets the functions from storage refences the image storage in firebase by the children\r\n      // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n      storage\r\n        .ref(\"images\")\r\n        .child(image.name)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          console.log(url);\r\n          let content = {userPhoto: url};\r\n        // The actual fetch request\r\n          \r\n        \r\n        fetch('http://localhost:8090/users/1', {\r\n          method: 'put',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(content)\r\n        }).then(response => {\r\n          if(response.ok) {\r\n              response.json().then(data => {\r\n                  console.log(data);\r\n                  fetch( 'http://localhost:8090/users/1')\r\n                    .then(response => response.json())\r\n                    .then(data =>{\r\n                    //console.log(data)\r\n                    this.setState({users: data})  ////赋值到本地数据\r\n                    console.log(this.state.users.userPhoto)\r\n                    }).catch(e => console.log('错误:', e))  \r\n              });\r\n          } else {\r\n              console.log(\"请求不成功，状态码为\", response.status);\r\n          }\r\n        }).catch(function(e) {\r\n          console.log(\"Oops, error\");\r\n        });\r\n        });\r\n\r\n\r\n\r\n          \r\n        \r\n    }\r\n  );\r\n};\r\n\r\n    \r\n  render(){\r\n    const { classes } = this.props;\r\n  return (\r\n    <Fragment>\r\n    <div className={background_container}>\r\n      <input \t\t\t\r\n        type=\"file\"\r\n        ref={this.fileInputEl}\t//挂载ref\r\n        accept=\".jpg,.jpeg,.png\"\t//限制文件类型\r\n        hidden\t//隐藏input \r\n        onChange={this.onFileChange} >\r\n      </input>\r\n      <div className={image_div}>\r\n          <img className={back_img} src={this.state.users.backgroundPhoto} alt=\"\"/>\r\n      </div>\r\n      <Avatar alt=\"defaut\" src={this.state.users.userPhoto} className={classes.default+\" \"+avatar}>\r\n        q\r\n      </Avatar>\r\n      <IconButton onClick={this.handleClick} className={classes.button+\" \"+updatebutton}>\r\n        <CreateOutlinedIcon />\r\n      </IconButton>\r\n      <IconButton onClick={() => {\r\n        this.fileInputEl.current.click()\t\t//当点击a标签的时候触发事件\r\n      }} className={classes.update_button+\" \"+cloud_upload} style={{display: this.state.display}}>\r\n      <CloudUploadIcon  />\r\n      </IconButton>\r\n        <Button onClick={this.uploadFile} variant=\"contained\" className={upload_button} style={{display: this.state.display}}>Upload</Button> \r\n    </div>\r\n    <div \r\n      className={info_update} \r\n      style={{display: this.state.display}}>    \r\n      <div className={classes.upload_button}>\r\n        <TextField id=\"standard-basic\" label=\"sherry\" onChange={this.handleOnChange} />\r\n        <Button variant=\"contained\" >\r\n        Cancel\r\n        </Button>\r\n        <Button variant=\"contained\" >\r\n          Save\r\n        </Button>\r\n      </div>\r\n      \r\n    </div> \r\n    </Fragment>\r\n  );\r\n  }}\r\n\r\n\r\nexport default withStyles(useStyles)(Background);"]},"metadata":{},"sourceType":"module"}